{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const uploadImage = createAsyncThunk(\"Images/uploadImage\", async (args, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post(\"http://localhost:5000/uploadImage\", args);\n    console.log(\"response\", response);\n    return (await response).data;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nexport const FetchImage = createAsyncThunk(\"Images/fetchImage\", async (args, {\n  rejectWithValue\n}) => {\n  console.log(\"FetchImage\");\n  try {\n    const response = await axios.get(\"http://localhost:5000/FetchImage\");\n    console.log(\"response from FetchImage\", response.data);\n    return (await response).data;\n  } catch (error) {\n    console.log(\"error\");\n    rejectWithValue(error.response.message);\n  }\n});\nexport const IncrementViewCount = createAsyncThunk(\"Images/IncrementCount\", async (args, {\n  rejectWithValue\n}) => {\n  try {\n    console.log(\"IncrementViewCountHit\");\n    console.log(\"args\", args);\n    const response = await axios.put(`http://localhost:5000/incrementCount/${args}/view`);\n    console.log(\"view updated\");\n    FetchImage();\n    return (await response).data;\n  } catch (error) {\n    console.error(\"Error Incrementing View Count\", error);\n  }\n});\nconst initialState = {\n  loading: false,\n  isSuccess: false,\n  message: \"\",\n  ImageGallary: []\n};\nexport const imageSlicer = createSlice({\n  name: \"images\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(uploadImage.pending, state => {\n      state.loading = true;\n    }).addCase(uploadImage.fulfilled, (state, action) => {\n      state.loading = false;\n      state.isSuccess = true;\n      state.ImageGallary.push(action.payload);\n    }).addCase(uploadImage.rejected, (state, action) => {\n      state.loading = false;\n      state.isSuccess = false;\n      state.message = action.error.message;\n    }).addCase(FetchImage.pending, (state, action) => {\n      state.loading = true;\n    }).addCase(FetchImage.fulfilled, (state, action) => {\n      state.loading = false;\n      state.isSuccess = true;\n      state.ImageGallary = action.payload;\n    }).addCase(FetchImage.rejected, (state, action) => {\n      state.loading = false;\n      state.isSuccess = false;\n      state.message = action.error.message;\n    }).addCase(IncrementViewCount.fulfilled, (state, action) => {\n      state.isSuccess = true;\n      state.pending = false;\n    }).addCase(IncrementViewCount.rejected, (state, action) => {\n      state.error = action.payload;\n    });\n  }\n});\nexport default imageSlicer.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","uploadImage","args","rejectWithValue","response","post","console","log","data","error","message","FetchImage","get","IncrementViewCount","put","initialState","loading","isSuccess","ImageGallary","imageSlicer","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","push","payload","rejected","reducer"],"sources":["D:/ImageHub/client/src/state/slicer.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const uploadImage = createAsyncThunk(\r\n  \"Images/uploadImage\",\r\n  async (args, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/uploadImage\",\r\n        args\r\n      );\r\n      console.log(\"response\", response);\r\n      return (await response).data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const FetchImage = createAsyncThunk(\r\n  \"Images/fetchImage\",\r\n  async (args, { rejectWithValue }) => {\r\n    console.log(\"FetchImage\");\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/FetchImage\");\r\n      console.log(\"response from FetchImage\", response.data);\r\n      return (await response).data;\r\n    } catch (error) {\r\n      console.log(\"error\");\r\n      rejectWithValue(error.response.message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const IncrementViewCount = createAsyncThunk(\r\n  \"Images/IncrementCount\",\r\n  async (args, { rejectWithValue }) => {\r\n    try {\r\n      console.log(\"IncrementViewCountHit\");\r\n      console.log(\"args\", args);\r\n      const response = await axios.put(\r\n        `http://localhost:5000/incrementCount/${args}/view`\r\n      );\r\n      console.log(\"view updated\");\r\n      FetchImage();\r\n      return (await response).data;\r\n    } catch (error) {\r\n      console.error(\"Error Incrementing View Count\", error);\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  isSuccess: false,\r\n  message: \"\",\r\n  ImageGallary: [],\r\n};\r\n\r\nexport const imageSlicer = createSlice({\r\n  name: \"images\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(uploadImage.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(uploadImage.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.isSuccess = true;\r\n        state.ImageGallary.push(action.payload);\r\n      })\r\n      .addCase(uploadImage.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.isSuccess = false;\r\n        state.message = action.error.message;\r\n      })\r\n      .addCase(FetchImage.pending, (state, action) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(FetchImage.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.isSuccess = true;\r\n        state.ImageGallary = action.payload;\r\n      })\r\n      .addCase(FetchImage.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.isSuccess = false;\r\n        state.message = action.error.message;\r\n      })\r\n      .addCase(IncrementViewCount.fulfilled, (state, action) => {\r\n        state.isSuccess = true;\r\n        state.pending = false;\r\n      })\r\n      .addCase(IncrementViewCount.rejected, (state, action) => {\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\nexport default imageSlicer.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}