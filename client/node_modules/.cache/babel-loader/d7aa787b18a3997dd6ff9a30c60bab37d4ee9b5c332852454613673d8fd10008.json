{"ast":null,"code":"var _jsxFileName = \"D:\\\\ImageHub\\\\client\\\\src\\\\Components\\\\ProtectedRoute\\\\ProtectedRoute.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  element: Component,\n  ...rest\n}) => {\n  _s();\n  const [loggedIn, setLoggedIn] = useState(false);\n  const checkSession = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/checkSession\");\n      setLoggedIn(response.data.loggedIn);\n    } catch (error) {\n      console.error('Error checking session', error);\n      setLoggedIn(false);\n    }\n  };\n  che;\n\n  // useEffect(() => {\n  //     checkSession();\n  // }, []);\n\n  return loggedIn ? /*#__PURE__*/_jsxDEV(Component, {\n    ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 23\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 49\n  }, this);\n};\n_s(ProtectedRoute, \"rumETxDPcQWJcg8a6Y55ZSVDz7g=\");\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useState","useEffect","Navigate","axios","jsxDEV","_jsxDEV","ProtectedRoute","element","Component","rest","_s","loggedIn","setLoggedIn","checkSession","response","get","data","error","console","che","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["D:/ImageHub/client/src/Components/ProtectedRoute/ProtectedRoute.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst ProtectedRoute = ({ element: Component, ...rest }) => {\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n\r\n    const checkSession = async () => {\r\n        try {\r\n            const response = await axios.get(\"http://localhost:5000/checkSession\");\r\n            setLoggedIn(response.data.loggedIn);\r\n        } catch (error) {\r\n            console.error('Error checking session', error);\r\n            setLoggedIn(false);\r\n        }\r\n    };\r\n    che\r\n\r\n    // useEffect(() => {\r\n    //     checkSession();\r\n    // }, []);\r\n\r\n    return loggedIn ? <Component {...rest} /> : <Navigate to=\"/\" />;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAC;EAAEC,OAAO,EAAEC,SAAS;EAAE,GAAGC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACxD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMa,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,oCAAoC,CAAC;MACtEH,WAAW,CAACE,QAAQ,CAACE,IAAI,CAACL,QAAQ,CAAC;IACvC,CAAC,CAAC,OAAOM,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CL,WAAW,CAAC,KAAK,CAAC;IACtB;EACJ,CAAC;EACDO,GAAG;;EAEH;EACA;EACA;;EAEA,OAAOR,QAAQ,gBAAGN,OAAA,CAACG,SAAS;IAAA,GAAKC;EAAI;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC,gBAAGlB,OAAA,CAACH,QAAQ;IAACsB,EAAE,EAAC;EAAG;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnE,CAAC;AAACb,EAAA,CAnBIJ,cAAc;AAAAmB,EAAA,GAAdnB,cAAc;AAqBpB,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}