{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const uploadImage = createAsyncThunk('Images/uploadImage', async (args, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post('http://localhost:5000/uploadImage', args);\n    console.log(\"response\", response);\n    alert(\"Image uploaded successfully\");\n    return (await response).data;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nexport const FetchImage = createAsyncThunk('Images/fetchImage', async (args, {\n  rejectWithValue\n}) => {\n  console.log(\"FetchImage\");\n  try {\n    const response = await axios.get('http://localhost:5000/FetchImage');\n    console.log(\"response from FetchImage\", response.data);\n    return (await response).data;\n  } catch (error) {\n    console.log(\"error\");\n    rejectWithValue(error.response.message);\n  }\n});\nexport const IncrementViewCount = createAsyncThunk('Images/IncrementCount', async (args, {\n  rejectWithValue\n}) => {\n  try {\n    console.log(\"IncrementViewCountHit\");\n    console.log(\"args\", args);\n    const response = await axios.put(`http://localhost:5000/incrementCount/${args}/view`);\n    console.log(\"view updated\");\n    FetchImage();\n    return (await response).data;\n  } catch (error) {\n    console.error('Error Incrementing View Count', error);\n  }\n});\nconst initialState = {\n  loading: false,\n  isSuccess: false,\n  message: '',\n  ImageGallary: []\n};\nexport const imageSlicer = createSlice({\n  name: 'images',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(uploadImage.pending, state => {\n      state.loading = true;\n    }).addCase(uploadImage.fulfilled, state => {\n      state.loading = false;\n      state.isSuccess = true;\n      state.ImageGallary.push(action.payload);\n    }).addCase(uploadImage.rejected, (state, action) => {\n      state.loading = false;\n      state.isSuccess = false;\n      state.message = action.error.message;\n    }).addCase(FetchImage.pending, (state, action) => {\n      state.loading = true;\n    }).addCase(FetchImage.fulfilled, (state, action) => {\n      state.loading = false;\n      state.isSuccess = true;\n      state.ImageGallary = action.payload;\n    }).addCase(FetchImage.rejected, (state, action) => {\n      state.loading = false;\n      state.isSuccess = false;\n      state.message = action.error.message;\n    }).addCase(IncrementViewCount.fulfilled, (state, action) => {\n      state.isSuccess = true;\n      state.pending = false;\n    }).addCase(IncrementViewCount.rejected, (state, action) => {\n      state.error = action.payload;\n    });\n  }\n});\nexport default imageSlicer.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","uploadImage","args","rejectWithValue","response","post","console","log","alert","data","error","message","FetchImage","get","IncrementViewCount","put","initialState","loading","isSuccess","ImageGallary","imageSlicer","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","push","action","payload","rejected","reducer"],"sources":["D:/ImageHub/client/src/state/slicer.js"],"sourcesContent":["import {createAsyncThunk,createSlice} from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const uploadImage=createAsyncThunk('Images/uploadImage',\r\n    async(args,{rejectWithValue})=>{\r\n        try{\r\n            const response=await axios.post('http://localhost:5000/uploadImage',args)\r\n            console.log(\"response\",response);\r\n            alert(\"Image uploaded successfully\")\r\n            return (await response).data\r\n        }\r\n        catch(error){\r\n            return rejectWithValue(error.message)\r\n        }\r\n    })\r\n\r\nexport const FetchImage=createAsyncThunk('Images/fetchImage',\r\n    async(args,{rejectWithValue})=>{\r\n        console.log(\"FetchImage\")\r\n        try{\r\n            const response=await axios.get('http://localhost:5000/FetchImage')\r\n            console.log(\"response from FetchImage\",response.data)\r\n            return (await response).data\r\n        }\r\n        catch(error){\r\n            console.log(\"error\")\r\n            rejectWithValue(error.response.message)\r\n        }\r\n    }\r\n)\r\n\r\nexport const IncrementViewCount=createAsyncThunk('Images/IncrementCount',\r\n    async(args,{rejectWithValue})=>{\r\n        try{\r\n            console.log(\"IncrementViewCountHit\")\r\n            console.log(\"args\",args)\r\n            const response=await axios.put(`http://localhost:5000/incrementCount/${args}/view`);\r\n            console.log(\"view updated\")\r\n            FetchImage();\r\n            return (await response).data\r\n        }\r\n        catch(error){\r\n            console.error('Error Incrementing View Count',error);\r\n        }\r\n    }\r\n)\r\n\r\n    const initialState={\r\n        loading:false,\r\n        isSuccess:false,\r\n        message:'',\r\n        ImageGallary:[]\r\n    }\r\n\r\n    export const imageSlicer=createSlice({\r\n        name:'images',\r\n        initialState,\r\n        reducers:{},\r\n        extraReducers:(builder)=>{\r\n            builder\r\n            .addCase(uploadImage.pending,(state)=>{\r\n                state.loading=true;\r\n            })\r\n            .addCase(uploadImage.fulfilled,(state)=>{\r\n                state.loading = false;\r\n                state.isSuccess = true;\r\n                state.ImageGallary.push(action.payload);\r\n            })\r\n            .addCase(uploadImage.rejected,(state,action)=>{\r\n                state.loading=false;\r\n                state.isSuccess=false;\r\n                state.message=action.error.message\r\n            })\r\n            .addCase(FetchImage.pending,(state,action)=>{\r\n                state.loading=true;\r\n            })\r\n            .addCase(FetchImage.fulfilled,(state,action)=>{\r\n                state.loading=false;\r\n                state.isSuccess=true;\r\n                state.ImageGallary=action.payload;\r\n            })\r\n            .addCase(FetchImage.rejected,(state,action)=>{\r\n                state.loading=false;\r\n                state.isSuccess=false;\r\n                state.message=action.error.message;\r\n            })\r\n            .addCase(IncrementViewCount.fulfilled, (state, action) => {\r\n                state.isSuccess=true;\r\n                state.pending=false;\r\n            })\r\n            .addCase(IncrementViewCount.rejected, (state, action) => {\r\n                state.error = action.payload;\r\n            })\r\n        }\r\n    })\r\n    export default imageSlicer.reducer\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}