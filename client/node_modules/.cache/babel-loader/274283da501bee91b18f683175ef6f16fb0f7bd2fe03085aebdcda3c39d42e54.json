{"ast":null,"code":"var _jsxFileName = \"D:\\\\ImageHub\\\\client\\\\src\\\\Components\\\\ImageUpload\\\\ImageUpload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { uploadImage } from \"../../state/slicer.js\";\nimport Navbar from \"../Navbar/Navbar.jsx\";\nimport axios from \"axios\";\nimport \"./ImageUpload.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ImageUpload() {\n  _s();\n  const [imagePreview, setImagePreview] = useState(null);\n  const [file, setFile] = useState();\n  const [title, setTitle] = useState(\"\");\n  const [viewCount, setViewCount] = useState(0);\n  const [description, setDescription] = useState(\"\");\n  const dispatch = useDispatch();\n  const {\n    ImageGallary,\n    isSuccess\n  } = useSelector(state => state.images);\n  const handleFileChange = e => {\n    setImagePreview(URL.createObjectURL(e.target.files[0]));\n    setFile(e.target.files[0]);\n  };\n  const handleUploadImage = async e => {\n    e.preventDefault();\n    if (file && title && description) {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      formData.append(\"title\", title);\n      formData.append(\"viewCount\", viewCount);\n      formData.append(\"description\", description);\n      console.log(\"formData\", formData);\n      try {\n        const response = dispatch(uploadImage(formData));\n        console.log(\"response\", response);\n      } catch (error) {\n        console.error(\"Error uploading image:\", error);\n        alert(\"Failed to upload image. Please try again.\");\n      }\n    } else {\n      alert(\"enter all fields\");\n    }\n  };\n\n  // const uploadImage=async(formData)=>{\n  //         try{\n  //             const response=await axios.post('http://localhost:5000/uploadImage',formData)\n  //             console.log(\"response\",response);\n  //             if(response.status===200)\n  //             alert(\"Image uploaded successfully\")\n  //             // return (await response).data\n  //             setFile(null);\n  //             setTitle('');\n  //             setDescription('');\n  //             setImagePreview(null);\n  //             return response;\n\n  //         }\n  //         catch(error){\n  //             // return rejectWithValue(error.message)\n  //             console.log(error)\n  //         }\n  //     }\n\n  useEffect(() => {\n    if (isSuccess) {\n      setFile(null);\n      setTitle(\"\");\n      setDescription(\"\");\n      setImagePreview(null);\n      alert(\"Image uploaded successfully!\");\n    }\n  }, [isSuccess, ImageGallary]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      showExtraLinks: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"heading\",\n        children: \"Upload Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: [\"Choose image\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: event => handleFileChange(event),\n            required: true,\n            className: \"input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: [\"Title\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: title,\n            maxLength: 15,\n            onChange: e => setTitle(e.target.value),\n            required: true,\n            className: \"input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: [\"Description\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: description,\n            maxLength: 250,\n            onChange: e => setDescription(e.target.value),\n            required: true,\n            className: \"input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), imagePreview && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            marginTop: \"10px\"\n          },\n          children: \"Chosen Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), imagePreview && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imagePreview,\n          alt: \"Preview\",\n          className: \"imagePreview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttonContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: event => {\n              handleUploadImage(event);\n            },\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ImageUpload, \"hQOUdSWz5pVRdslsPyuIXUXN2UU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = ImageUpload;\nvar _c;\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","uploadImage","Navbar","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ImageUpload","_s","imagePreview","setImagePreview","file","setFile","title","setTitle","viewCount","setViewCount","description","setDescription","dispatch","ImageGallary","isSuccess","state","images","handleFileChange","e","URL","createObjectURL","target","files","handleUploadImage","preventDefault","formData","FormData","append","console","log","response","error","alert","children","showExtraLinks","fileName","_jsxFileName","lineNumber","columnNumber","className","type","onChange","event","required","value","maxLength","style","marginTop","src","alt","onClick","_c","$RefreshReg$"],"sources":["D:/ImageHub/client/src/Components/ImageUpload/ImageUpload.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { uploadImage } from \"../../state/slicer.js\";\r\nimport Navbar from \"../Navbar/Navbar.jsx\";\r\nimport axios from \"axios\";\r\nimport \"./ImageUpload.css\"\r\n\r\nexport default function ImageUpload() {\r\n  const [imagePreview, setImagePreview] = useState(null);\r\n  const [file, setFile] = useState();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [viewCount, setViewCount] = useState(0);\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const { ImageGallary, isSuccess } = useSelector((state) => state.images);\r\n\r\n  const handleFileChange = (e) => {\r\n    setImagePreview(URL.createObjectURL(e.target.files[0]));\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUploadImage = async (e) => {\r\n    e.preventDefault();\r\n    if (file && title && description) {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n      formData.append(\"title\", title);\r\n      formData.append(\"viewCount\", viewCount);\r\n      formData.append(\"description\", description);\r\n      console.log(\"formData\", formData);\r\n      try {\r\n        const response = dispatch(uploadImage(formData));\r\n        console.log(\"response\", response);\r\n      } catch (error) {\r\n        console.error(\"Error uploading image:\", error);\r\n        alert(\"Failed to upload image. Please try again.\");\r\n      }\r\n    } else {\r\n      alert(\"enter all fields\");\r\n    }\r\n  };\r\n\r\n  // const uploadImage=async(formData)=>{\r\n  //         try{\r\n  //             const response=await axios.post('http://localhost:5000/uploadImage',formData)\r\n  //             console.log(\"response\",response);\r\n  //             if(response.status===200)\r\n  //             alert(\"Image uploaded successfully\")\r\n  //             // return (await response).data\r\n  //             setFile(null);\r\n  //             setTitle('');\r\n  //             setDescription('');\r\n  //             setImagePreview(null);\r\n  //             return response;\r\n\r\n  //         }\r\n  //         catch(error){\r\n  //             // return rejectWithValue(error.message)\r\n  //             console.log(error)\r\n  //         }\r\n  //     }\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      setFile(null);\r\n      setTitle(\"\");\r\n      setDescription(\"\");\r\n      setImagePreview(null);\r\n      alert(\"Image uploaded successfully!\");\r\n    }\r\n  }, [isSuccess, ImageGallary]);\r\n\r\n  return (\r\n    <>\r\n      <Navbar showExtraLinks={true}/>\r\n      <div className=\"container\">\r\n        <h2 className=\"heading\">Upload Image</h2>\r\n        <form className=\"form\">\r\n          <label className=\"label\">\r\n            Choose image\r\n            <input\r\n              type=\"file\"\r\n              onChange={(event) => handleFileChange(event)}\r\n              required\r\n              className=\"input\"\r\n            />\r\n          </label>\r\n          <label className=\"label\">\r\n            Title\r\n            <input\r\n              type=\"text\"\r\n              value={title}\r\n              maxLength={15}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              required\r\n              className=\"input\"\r\n            />\r\n          </label>\r\n          <label className=\"label\">\r\n            Description\r\n            <input\r\n              type=\"text\"\r\n              value={description}\r\n              maxLength={250}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              required\r\n              className=\"input\"\r\n            />\r\n          </label>\r\n          {imagePreview && (\r\n            <span style={{ marginTop: \"10px\" }}>Chosen Image</span>\r\n          )}\r\n          {imagePreview && (\r\n            <img src={imagePreview} alt=\"Preview\" className=\"imagePreview\" />\r\n          )}\r\n          <div className=\"buttonContainer\">\r\n            <button\r\n              className=\"button\"\r\n              onClick={(event) => {\r\n                handleUploadImage(event);\r\n              }}\r\n            >\r\n              Upload\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}